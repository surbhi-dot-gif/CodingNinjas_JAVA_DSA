We are given a 4 digit number using digits 1 to 9. What is the maximum 3 digit number that we can make by removing one digit from the given integer.
Input Format :
A 4 digit number
Output Format :
A 3 digit number
Sample Input :
5438
Sample Output :
548
Explanation :
1. If we remove 5, the new number is 438.
2. If we remove 4, the new number is 538.
3. If we remove 3, the new number is 548.
4. If we remove 8, the new number is 543.
Out of the 4 cases removing 3 gives us the maximum 3 digit number i.e 548

SOlution:

public class Solution {
    
    public static int max_number(int n){
                
        /* Your class should be named Solution
        * Don't write main().
        * Don't read input, it is passed as function argument.
        * Return output and don't print it.
        * Taking input and printing output is handled automatically.
        */
       
        int maxNumber = 0;

        String numString = Integer.toString(n);
        int num = numString.length();

        // Check all possible combinations by removing one digit at a time
        for (int i = 0; i < num; i++) {
            StringBuilder temp = new StringBuilder(numString);
            temp.deleteCharAt(i);
            int currentNumber = Integer.parseInt(temp.toString());

            // Update the maxNumber if the currentNumber is greater and has 3 digits
            if (currentNumber > maxNumber && currentNumber >= 100 && currentNumber <= 999) {
                maxNumber = currentNumber;
            }
        }

        return maxNumber;
    }
}
